akka {
  loglevel = "INFO"
  actor.provider = cluster
  coordinated-shutdown.exit-jvm = on

  cluster {
    shutdown-after-unsuccessful-join-seed-nodes = 60s
    sharding {
      passivate-idle-entity-after = 1800 seconds
      number-of-shards = 240 //number of nodes * 10
    }
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  typed {
    stash-capacity = 200000
  }
}

akka.management {
  cluster.bootstrap {
    contact-point-discovery {
      discovery-method = kubernetes-api
      required-contact-point-nr = ${?REQUIRED_CONTACT_POINT_NR}
    }
  }
}

akka.management {
  health-checks {
    readiness-checks {
      ready = "it.pagopa.pdnd.interop.uservice.catalogprocess.server.impl.HealthCheck"
    }
    liveness-checks {
      live = "it.pagopa.pdnd.interop.uservice.catalogprocess.server.impl.LiveCheck"
    }
  }
}

kamon.prometheus {
  embedded-server {
    hostname = 0.0.0.0
  }
}

kamon.instrumentation.akka.http {
  server {
    propagation {
      enabled = yes
      channel = default
    }
  }

  client {
    propagation {
      enabled = yes
      channel = default
    }
  }
}

kamon.instrumentation.akka.http {
  server.metrics {
    enabled = yes
  }
}

kamon.instrumentation.akka.http {
  server {
    tracing {
      enabled = yes
      span-metrics = on
    }
  }

  client {
    tracing {
      enabled = yes
      span-metrics = on
    }
  }
}

pdnd-interop-uservice-catalogprocess {
  idle-timeout = 60 seconds
  number-of-events-before-snapshot = 1000
}

http {
  entity-to-strict-timeout = 15 seconds
}

services {
   catalog-management = "http://pdnd-interop-uservice-catalog-management.pdnd-interop-uservice-catalog-management.svc.cluster.local:8088"
}

