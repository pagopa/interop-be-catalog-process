openapi: 3.0.3
info:
  title: Catalog Process Micro Service
  description: This service is the catalog process
  version: '{{version}}'
  contact:
    name: API Support
    url: http://www.example.com/support
    email: support@example.com
  termsOfService: 'http://swagger.io/terms/'
  x-api-id: an x-api-id
  x-summary: an x-summary
servers:
  - url: '/catalog-process/{{version}}'
    description: This service is the catalog process
security:
  - bearerAuth: []
tags:
  - name: process
    description: Implements catalog process
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: health
    description: Verify service status
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /eservices:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
    get:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Retrieve a list of E-Service
      operationId: getEServices
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: eservicesIds
          description: comma separated sequence of EService IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: producersIds
          description: comma separated sequence of producers IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: states
          description: comma separated sequence of states
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EServiceDescriptorState'
            default: []
          explode: false
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 50
      responses:
        '200':
          description: A list of E-Service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EServices'
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Create a new e-service
      operationId: createEService
      requestBody:
        description: An E-Service seed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EServiceSeed'
        required: true
      responses:
        '200':
          description: EService created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OldEService'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /flatten/eservices:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
    get:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Retrieve a flatten list of E-Service
      operationId: getFlatEServices
      parameters:
        - in: query
          name: callerId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: producerId
          schema:
            type: string
        - in: query
          name: consumerId
          schema:
            type: string
        - in: query
          name: agreementStates
          description: comma separated sequence of agreement states to filter the response with
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AgreementState'
            default: []
          explode: false
        - in: query
          name: state
          schema:
            $ref: '#/components/schemas/EServiceDescriptorState'
        - in: query
          name: latestPublishedOnly
          schema:
            type: boolean
      responses:
        '200':
          description: A list of flattened E-Services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlatEServices'
  /eservices/{eServiceId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
    get:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Get an e-service
      operationId: getEServiceById
      parameters:
        - name: eServiceId
          in: path
          description: The E-Service id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: E-Service retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EService'
        '404':
          description: E-Service not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    put:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Updates e-service general information
      operationId: updateEServiceById
      parameters:
        - name: eServiceId
          in: path
          description: The E-Service id to update
          required: true
          schema:
            type: string
      requestBody:
        description: An E-Service update seed containing the possible updatable fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEServiceSeed'
      responses:
        '200':
          description: E-Service updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OldEService'
        '404':
          description: E-Service not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    delete:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Deletes an e-service
      operationId: deleteEService
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: EService deleted
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /eservices/{eServiceId}/descriptors:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Adds a descriptor to the specified e-service
      operationId: createDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: The E-Service id
          required: true
          schema:
            type: string
      requestBody:
        description: An E-Service Descriptor seed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EServiceDescriptorSeed'
        required: true
      responses:
        '200':
          description: EService Descriptor created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EServiceDescriptor'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /eservices/{eServiceId}/descriptors/{descriptorId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
    delete:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Deletes a draft descriptor
      operationId: deleteDraft
      parameters:
        - name: eServiceId
          in: path
          description: The E-Service Id
          required: true
          schema:
            type: string
        - name: descriptorId
          in: path
          description: The Descriptor Id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: E-Service draft Descriptor deleted
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    put:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Updates a draft descriptor
      operationId: updateDraftDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: The E-Service id
          required: true
          schema:
            type: string
        - name: descriptorId
          in: path
          description: The Descriptor Id
          required: true
          schema:
            type: string
      requestBody:
        description: An E-Service Descriptor seed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEServiceDescriptorSeed'
        required: true
      responses:
        '200':
          description: EService with draft descriptor updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OldEService'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /eservices/{eServiceId}/descriptors/{descriptorId}/publish:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Publish the selected descriptor.
      operationId: publishDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: E-Service Descriptor published
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /eservices/{eServiceId}/descriptors/{descriptorId}/suspend:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Suspend the selected descriptor.
      operationId: suspendDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: E-Service Descriptor suspended
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /eservices/{eServiceId}/descriptors/{descriptorId}/activate:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Suspend the selected descriptor.
      operationId: activateDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: E-Service Descriptor activated
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /eservices/{eServiceId}/descriptors/{descriptorId}/clone:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Clones the selected descriptor.
      operationId: cloneEServiceByDescriptor
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
            format: uuid
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Cloned EService with a new draft descriptor updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OldEService'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /eservices/{eServiceId}/descriptors/{descriptorId}/documents:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Add new e-service document
      operationId: createEServiceDocument
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
      requestBody:
        description: E-Service document
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - kind
                - prettyName
                - doc
              properties:
                kind:
                  type: string
                  description: Document Type
                  enum:
                    - INTERFACE
                    - DOCUMENT
                prettyName:
                  type: string
                doc:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: EService Document created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OldEService'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /eservices/{eServiceId}/descriptors/{descriptorId}/documents/{documentId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
    get:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Get an e-service document
      operationId: getEServiceDocumentById
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: the document id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: EService document retrieved
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: EService not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    delete:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Deletes an e-service document
      operationId: deleteEServiceDocumentById
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: the document id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Document deleted.
        '404':
          description: E-Service descriptor document not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /eservices/{eServiceId}/descriptors/{descriptorId}/documents/{documentId}/update:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
    post:
      security:
        - bearerAuth: []
      tags:
        - process
      summary: Updates an e-service document
      operationId: updateEServiceDocumentById
      parameters:
        - name: eServiceId
          in: path
          description: the eservice id
          required: true
          schema:
            type: string
        - name: descriptorId
          in: path
          description: the descriptor Id
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: the document id
          required: true
          schema:
            type: string
      requestBody:
        description: A payload containing the possible document updatable fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEServiceDescriptorDocumentSeed'
      responses:
        '200':
          description: EService Descriptor updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EServiceDoc'
        '404':
          description: EService not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /status:
    get:
      security: []
      tags:
        - health
      summary: Health status endpoint
      description: Return ok
      operationId: getStatus
      responses:
        '200':
          description: successful operation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
components:
  parameters:
    CorrelationIdHeader:
      in: header
      name: X-Correlation-Id
      required: true
      schema:
        type: string
    IpAddress:
      in: header
      name: X-Forwarded-For
      schema:
        type: string
  schemas:
    EServiceSeed:
      type: object
      required:
        - producerId
        - name
        - description
        - technology
        - attributes
      properties:
        producerId:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        technology:
          $ref: '#/components/schemas/EServiceTechnology'
        attributes:
          $ref: '#/components/schemas/AttributesSeed'
    UpdateEServiceSeed:
      type: object
      required:
        - name
        - description
        - technology
        - attributes
      properties:
        name:
          type: string
        description:
          type: string
        technology:
          $ref: '#/components/schemas/EServiceTechnology'
        attributes:
          $ref: '#/components/schemas/AttributesSeed'
    EServiceDescriptorSeed:
      required:
        - audience
        - voucherLifespan
        - dailyCallsPerConsumer
        - dailyCallsTotal
        - agreementApprovalPolicy
      type: object
      properties:
        description:
          type: string
        audience:
          type: array
          items:
            type: string
        voucherLifespan:
          type: integer
          format: int32
          minimum: 60
          maximum: 86400
        dailyCallsPerConsumer:
          description: 'maximum number of daily calls that this descriptor can afford.'
          type: integer
          format: int32
          minimum: 0
        dailyCallsTotal:
          description: 'total daily calls available for this e-service.'
          type: integer
          format: int32
          minimum: 0
        agreementApprovalPolicy:
          $ref: '#/components/schemas/AgreementApprovalPolicy'
    UpdateEServiceDescriptorSeed:
      required:
        - audience
        - voucherLifespan
        - dailyCallsPerConsumer
        - dailyCallsTotal
        - agreementApprovalPolicy
      type: object
      properties:
        description:
          type: string
        audience:
          type: array
          items:
            type: string
        voucherLifespan:
          type: integer
          format: int32
          minimum: 60
          maximum: 86400
        dailyCallsPerConsumer:
          description: 'maximum number of daily calls that this descriptor can afford.'
          type: integer
          format: int32
          minimum: 0
        dailyCallsTotal:
          description: 'total daily calls available for this e-service.'
          type: integer
          format: int32
          minimum: 0
        agreementApprovalPolicy:
          $ref: '#/components/schemas/AgreementApprovalPolicy'
    UpdateEServiceDescriptorDocumentSeed:
      required:
        - prettyName
      type: object
      properties:
        prettyName:
          type: string
    AttributesSeed:
      properties:
        certified:
          type: array
          items:
            $ref: '#/components/schemas/AttributeSeed'
        declared:
          type: array
          items:
            $ref: '#/components/schemas/AttributeSeed'
        verified:
          type: array
          items:
            $ref: '#/components/schemas/AttributeSeed'
      required:
        - certified
        - declared
        - verified
    AttributeSeed:
      type: object
      properties:
        single:
          $ref: '#/components/schemas/AttributeValueSeed'
        group:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValueSeed'
    AttributeValueSeed:
      type: object
      properties:
        id:
          type: string
          format: uuid
        explicitAttributeVerification:
          type: boolean
      required:
        - id
        - explicitAttributeVerification
    AgreementApprovalPolicy:
      type: string
      description: |
        EService Descriptor policy for new Agreements approval.
        AUTOMATIC - the agreement will be automatically approved if Consumer attributes are met
        MANUAL - the Producer must approve every agreement for this Descriptor.
      enum:
        - AUTOMATIC
        - MANUAL
    Organization:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    OldEService:
      type: object
      required:
        - id
        - producer
        - name
        - description
        - technology
        - attributes
        - descriptors
      properties:
        id:
          type: string
          format: uuid
        producer:
          $ref: '#/components/schemas/Organization'
        name:
          type: string
        description:
          type: string
        technology:
          $ref: '#/components/schemas/EServiceTechnology'
        attributes:
          $ref: '#/components/schemas/OldAttributes'
        descriptors:
          type: array
          items:
            $ref: '#/components/schemas/EServiceDescriptor'
    EService:
      type: object
      required:
        - id
        - producerId
        - name
        - description
        - technology
        - attributes
        - descriptors
      properties:
        id:
          type: string
          format: uuid
        producerId:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        technology:
          $ref: '#/components/schemas/EServiceTechnology'
        attributes:
          $ref: '#/components/schemas/Attributes'
        descriptors:
          type: array
          items:
            $ref: '#/components/schemas/EServiceDescriptor'
    EServices:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EService'
        totalCount:
          type: integer
          format: int32
      required:
        - results
        - totalCount
    EServiceDoc:
      type: object
      required:
        - id
        - name
        - contentType
        - prettyName
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        contentType:
          type: string
        prettyName:
          type: string
    EServiceDescriptor:
      type: object
      required:
        - id
        - version
        - docs
        - state
        - creationDate
        - audience
        - voucherLifespan
        - dailyCallsPerConsumer
        - dailyCallsTotal
        - agreementApprovalPolicy
      properties:
        id:
          type: string
          format: uuid
        version:
          type: string
        description:
          type: string
        audience:
          type: array
          items:
            type: string
        voucherLifespan:
          type: integer
          format: int32
        dailyCallsPerConsumer:
          description: 'maximum number of daily calls that this descriptor can afford per consumer.'
          type: integer
          format: int32
          minimum: 0
        dailyCallsTotal:
          description: 'total daily calls available for this e-service.'
          type: integer
          format: int32
          minimum: 0
        interface:
          $ref: '#/components/schemas/EServiceDoc'
        docs:
          type: array
          items:
            $ref: '#/components/schemas/EServiceDoc'
        state:
          $ref: '#/components/schemas/EServiceDescriptorState'
        agreementApprovalPolicy:
          $ref: '#/components/schemas/AgreementApprovalPolicy'
    OldAttributeValue:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        explicitAttributeVerification:
          type: boolean
      required:
        - id
        - name
        - description
        - explicitAttributeVerification
    OldAttribute:
      type: object
      properties:
        single:
          $ref: '#/components/schemas/OldAttributeValue'
        group:
          type: array
          items:
            $ref: '#/components/schemas/OldAttributeValue'
    OldAttributes:
      properties:
        certified:
          type: array
          items:
            $ref: '#/components/schemas/OldAttribute'
        declared:
          type: array
          items:
            $ref: '#/components/schemas/OldAttribute'
        verified:
          type: array
          items:
            $ref: '#/components/schemas/OldAttribute'
      required:
        - certified
        - declared
        - verified
    AttributeValue:
      type: object
      properties:
        id:
          type: string
          format: uuid
        explicitAttributeVerification:
          type: boolean
      required:
        - id
        - explicitAttributeVerification
    Attribute:
      type: object
      properties:
        single:
          $ref: '#/components/schemas/AttributeValue'
        group:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValue'
    Attributes:
      properties:
        certified:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        declared:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        verified:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
      required:
        - certified
        - declared
        - verified
    FlatEService:
      type: object
      required:
        - id
        - producerId
        - producerName
        - name
        - description
        - certifiedAttributes
      properties:
        id:
          type: string
          format: uuid
        producerId:
          type: string
          format: uuid
        producerName:
          type: string
        name:
          type: string
        version:
          type: string
        description:
          type: string
        state:
          $ref: '#/components/schemas/EServiceDescriptorState'
        descriptorId:
          type: string
        agreement:
          $ref: '#/components/schemas/FlatAgreement'
        certifiedAttributes:
          description: 'contains a flat version of the certified attribute identifiers of this e-service'
          type: array
          items:
            $ref: '#/components/schemas/FlatAttribute'
    EServiceTechnology:
      type: string
      description: API Technology
      enum:
        - REST
        - SOAP
    EServiceDescriptorState:
      type: string
      description: EService Descriptor State
      enum:
        - DRAFT
        - PUBLISHED
        - DEPRECATED
        - SUSPENDED
        - ARCHIVED
    FlatEServices:
      type: array
      items:
        $ref: '#/components/schemas/FlatEService'
    FlatAgreement:
      type: object
      properties:
        id:
          type: string
          format: uuid
        state:
          $ref: '#/components/schemas/AgreementState'
      required:
        - id
        - state
    FlatAttribute:
      type: object
      properties:
        single:
          $ref: '#/components/schemas/FlatAttributeValue'
        group:
          type: array
          items:
            $ref: '#/components/schemas/FlatAttributeValue'
    FlatAttributeValue:
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    AgreementState:
      type: string
      description: Agreement State
      enum:
        - DRAFT
        - PENDING
        - ACTIVE
        - SUSPENDED
        - ARCHIVED
        - MISSING_CERTIFIED_ATTRIBUTES
        - REJECTED
    Problem:
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 503
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description: A short, summary of the problem type. Written in english and readable
          example: Service Unavailable
          maxLength: 64
          pattern: '^[ -~]{0,64}$'
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: '^.{0,1024}$'
          type: string
        errors:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ProblemError'
      additionalProperties: false
      required:
        - type
        - status
        - title
        - errors
    ProblemError:
      properties:
        code:
          description: Internal code of the error
          example: 123-4567
          minLength: 8
          maxLength: 8
          pattern: '^[0-9]{3}-[0-9]{4}$'
          type: string
        detail:
          description: A human readable explanation specific to this occurrence of the problem.
          example: Parameter not valid
          maxLength: 4096
          pattern: '^.{0,1024}$'
          type: string
      required:
        - code
        - detail
  securitySchemes:
    bearerAuth:
      type: http
      description: A bearer token in the format of a JWS and comformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725).
      scheme: bearer
      bearerFormat: JWT
