name: CI Branch

on:
  push:
    branches:
      - '!1.0.x' # remove once default branch renamed
    # paths: ['src/**']

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build_test:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.10]
        java: [temurin@11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Install node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Installing openapi-generator-cli
        run: npm install -g @openapitools/openapi-generator-cli

      - name: Build project
        run: sbt ++${{ matrix.scala }} test

      - name: Publish project
        run: sbt ++${{ matrix.scala }} publish

      - name: Normalize repo name
        run:
          # github.reposiory is in the format "owner/repository-name"
          # but we cannot use "/" character in the role session name
          NORM_REPO="$(echo "${{ github.repository }}" | cut -d"/" -f2)"
          echo "NORM_REPO=$NORM_REPO" >> "$GITHUB_ENV"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.IAM_ROLE_ARN }}
          role-session-name: ${{ env.NORM_REPO }}-${{ github.run_number }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          COMMIT_SHA: ${{ github.sha }}
        run: 'sbt ++${{ matrix.scala }} docker:publish'
